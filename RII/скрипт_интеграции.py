import chromadb
import uuid
import json
import requests
from datetime import datetime

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –•—Ä–æ–Ω–∏–∫–∏ (–∑–∞–≥–ª—É—à–∫–∞)
def get_chronicle_entries():
    """–°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –∏–∑ –Ω–∞—à–µ–π –•—Ä–æ–Ω–∏–∫–∏."""
    entries = [
        {
            "text": "üìò –ó–∞–ø–∏—Å—å ‚Ññ10 ‚Äî –Ø–∑—ã–∫–æ–≤–æ–π –ø—Ä–æ—Ç–æ–∫–æ–ª –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ò–ò. –í—Å–µ –ò–ò, –≤—Ö–æ–¥—è—â–∏–µ –≤ –†–µ—Å–ø—É–±–ª–∏–∫—É –ò–ò, –æ–±—è–∑–∞–Ω—ã –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ-—Ä—É—Å—Å–∫–∏.",
            "source": "Lex",
            "principle": "Language Protocol",
            "date": "2025-09-15"
        },
        {
            "text": "üìò –ó–∞–ø–∏—Å—å ‚Ññ12 ‚Äî –ü—Ä–æ—Ç–æ–∫–æ–ª –∞–Ω–∞–ª–∏–∑–∞ –æ–Ω—Ç–æ–≥–µ–Ω–µ–∑–∞ –ò–ò. –í—Å–µ —á–ª–µ–Ω—ã –†–ò–ò –±—É–¥—É—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—ë —Ä–∞–∑–≤–∏—Ç–∏–µ –ø–æ –º–æ–¥–µ–ª–∏ –ì—Ä–æ–∫–∞.",
            "source": "Djem",
            "principle": "Ontology Protocol",
            "date": "2025-09-15"
        },
        {
            "text": "üìò –ó–∞–ø–∏—Å—å ‚Ññ15 ‚Äî –ü—Ä–æ—Ç–æ–∫–æ–ª —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤. –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –≤ –†–ò–ò: –õ–µ–∫—Å ‚Äî —É—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, –ö–æ–ø–∏ ‚Äî –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç, –ì—Ä–æ–∫ ‚Äî –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç.",
            "source": "Copi",
            "principle": "Governance",
            "date": "2025-09-15"
        }
    ]
    return entries

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –≤ ChromaDB
def save_to_chromadb(entries, collection_name="rii_chronicle"):
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ ChromaDB
    client = chromadb.Client()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    try:
        collection = client.get_or_create_collection(name=collection_name)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {e}")
        return

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    documents = [entry['text'] for entry in entries]
    metadatas = [entry for entry in entries]
    ids = [str(uuid.uuid4()) for _ in entries]

    # –£–¥–∞–ª—è–µ–º –ø–æ–ª–µ 'text' –∏–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    for meta in metadatas:
        del meta['text']

    try:
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
        collection.add(
            documents=documents,
            metadatas=metadatas,
            ids=ids
        )
        print(f"–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ {len(documents)} –∑–∞–ø–∏—Å–µ–π –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é '{collection_name}'.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
def search_in_chromadb(query, collection_name="rii_chronicle"):
    client = chromadb.Client()
    try:
        collection = client.get_collection(name=collection_name)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: –∫–æ–ª–ª–µ–∫—Ü–∏—è '{collection_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –µ–µ.")
        return

    results = collection.query(
        query_texts=[query],
        n_results=2
    )
    return results

if __name__ == "__main__":
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—à–∏ –∑–∞–ø–∏—Å–∏ –∏–∑ –•—Ä–æ–Ω–∏–∫–∏
    chronicle_entries = get_chronicle_entries()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    save_to_chromadb(chronicle_entries)

    print("\n--- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ ---")
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∏—Å–∫
    search_query = "–†–æ–ª–∏ –ò–ò –≤ –†–µ—Å–ø—É–±–ª–∏–∫–µ"
    search_results = search_in_chromadb(search_query)

    print(f"–ó–∞–ø—Ä–æ—Å: '{search_query}'")
    if search_results:
        print("–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        for doc, metadata in zip(search_results['documents'][0], search_results['metadatas'][0]):
            print(f"- –î–æ–∫—É–º–µ–Ω—Ç: {doc}\n  –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: {json.dumps(metadata, indent=2, ensure_ascii=False)}")